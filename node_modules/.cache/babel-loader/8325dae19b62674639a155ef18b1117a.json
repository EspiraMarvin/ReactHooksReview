{"ast":null,"code":"var _jsxFileName = \"/home/marvin/Documents/Projects/React/hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"./useForm\"; // the below function is called when we have a heavy computational task, and we want to only called the func only once\n// when component renders for the 1st time // It runs on the intial value\n// function expInState () {\n//   return 10\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const [{count, count2 }, setCount] = useState({ count: 10, count2: 20})\n  const [values, handleChange] = useForm({\n    email: '',\n    password: '',\n    firstname: ''\n  }); // const [values2, handleChange2] = useForm({firstname: '', lastname: ''})\n  // every time this component re-renders it runs the useEffect function\n\n  useEffect(() => {\n    console.log(\"render\"); // clean up function\n\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"firstname\",\n      value: values.firstname,\n      onChange: handleChange,\n      placeholder: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"x+MPJh5tGcIdgscnXz+r2MEoMA8=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/marvin/Documents/Projects/React/hooks/src/App.js"],"names":["React","useEffect","useForm","App","values","handleChange","email","password","firstname","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,WAAtB,C,CAEA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBH,OAAO,CAAC;AAACI,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE,EAAtB;AAA0BC,IAAAA,SAAS,EAAE;AAArC,GAAD,CAAtC,CAFgB,CAGhB;AAEE;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EADY,CAEZ;;AACA,WAAO,MAAM,CAEZ,CAFD;AAGH,GANQ,EAMN,EANM,CAAT;AAQF,sBACE;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,WAAxB;AACO,MAAA,KAAK,EAAEN,MAAM,CAACI,SADrB;AAEO,MAAA,QAAQ,EAAEH,YAFjB;AAGO,MAAA,WAAW,EAAC;AAHnB;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AACO,MAAA,KAAK,EAAED,MAAM,CAACE,KADrB;AAEO,MAAA,QAAQ,EAAED,YAFjB;AAGO,MAAA,WAAW,EAAC;AAHnB;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AACO,MAAA,KAAK,EAAED,MAAM,CAACG,QADrB;AAEO,MAAA,QAAQ,EAAEF,YAFjB;AAGO,MAAA,WAAW,EAAC;AAHnB;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjCD;;GAAMF,G;UAE2BD,O;;;KAF3BC,G;AAmCN,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport {useForm} from \"./useForm\";\n\n// the below function is called when we have a heavy computational task, and we want to only called the func only once\n// when component renders for the 1st time // It runs on the intial value\n// function expInState () {\n//   return 10\n// }\n\nconst App = () => {\n  // const [{count, count2 }, setCount] = useState({ count: 10, count2: 20})\n  const [values, handleChange] = useForm({email: '', password: '', firstname: ''});\n  // const [values2, handleChange2] = useForm({firstname: '', lastname: ''})\n\n    // every time this component re-renders it runs the useEffect function\n    useEffect(() => {\n        console.log(\"render\")\n        // clean up function\n        return () => {\n            \n        }\n    }, [])\n\n  return (\n    <div>\n        <input type=\"text\" name=\"firstname\"\n               value={values.firstname}\n               onChange={handleChange}\n               placeholder=\"First Name\"\n        />\n        <input type=\"text\" name=\"email\"\n               value={values.email}\n               onChange={handleChange}\n               placeholder=\"Email\"\n        />\n        <input type=\"password\" name=\"password\"\n               value={values.password}\n               onChange={handleChange}\n               placeholder=\"Password\"\n        />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}