{"ast":null,"code":"var _jsxFileName = \"/home/marvin/Documents/Projects/React/hooks/src/Hello.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\nimport { useFetch } from \"./useFetch\";\nimport { useMeasure } from \"./useMeasure\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Hello = () => {\n  _s();\n\n  const [count, setCount] = useState(() => JSON.parse(localStorage.getItem('count')));\n  const {\n    data,\n    loading\n  } = useFetch(`http://numbersapi.com/${count}/trivia`);\n  useEffect(() => {\n    localStorage.setItem('count', JSON.stringify(count));\n  }, [count]);\n  const [rect, setRect] = useState({});\n  const divRef = useRef();\n  useLayoutEffect(() => {\n    setRect(divRef.current.getBoundingClientRect());\n  }, [data]);\n  const rectangle = useMeasure();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: divRef,\n        children: !data ? 'loading....' : data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(rect, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(c => c + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Hello, \"8yiVdorifPzLFjwmodBoqsAdtZg=\", false, function () {\n  return [useFetch, useMeasure];\n});\n\n_c = Hello;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hello\");","map":{"version":3,"sources":["/home/marvin/Documents/Projects/React/hooks/src/Hello.js"],"names":["React","useState","useEffect","useRef","useLayoutEffect","useFetch","useMeasure","Hello","count","setCount","JSON","parse","localStorage","getItem","data","loading","setItem","stringify","rect","setRect","divRef","current","getBoundingClientRect","rectangle","display","c"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,eAA7C,QAAoE,OAApE;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,UAAR,QAAyB,cAAzB;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,MAC/BS,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAD8B,CAAlC;AAIA,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBV,QAAQ,CAAE,yBAAwBG,KAAM,SAAhC,CAAhC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,SAAL,CAAeT,KAAf,CAA9B;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMmB,MAAM,GAAGjB,MAAM,EAArB;AAEAC,EAAAA,eAAe,CAAC,MAAM;AAClBe,IAAAA,OAAO,CAACC,MAAM,CAACC,OAAP,CAAeC,qBAAf,EAAD,CAAP;AACH,GAFc,EAEZ,CAACR,IAAD,CAFY,CAAf;AAIA,QAAMS,SAAS,GAAGjB,UAAU,EAA5B;AACA,sBACI;AAAA,4BACI;AAAK,MAAA,KAAK,EAAE;AAACkB,QAAAA,OAAO,EAAE;AAAV,OAAZ;AAAA,6BACI;AAAK,QAAA,GAAG,EAAEJ,MAAV;AAAA,kBAAmB,CAACN,IAAD,GAAQ,aAAR,GAAwBA;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,gBACKJ,IAAI,CAACO,SAAL,CAAeC,IAAf,EAAqB,IAArB,EAA2B,CAA3B;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,4BAAaV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACgB,CAAC,IAAIA,CAAC,GAAG,CAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAjCM;;GAAMlB,K;UAMeF,Q,EAaNC,U;;;KAnBTC,K","sourcesContent":["\nimport React, { useState, useEffect, useRef, useLayoutEffect } from 'react'\nimport {useFetch} from \"./useFetch\";\nimport {useMeasure} from \"./useMeasure\";\n\nexport const Hello = () => {\n\n    const [count, setCount] = useState(() =>\n        JSON.parse(localStorage.getItem('count'))\n    )\n\n    const {data, loading} = useFetch(`http://numbersapi.com/${count}/trivia`)\n\n    useEffect(() => {\n        localStorage.setItem('count', JSON.stringify(count))\n    }, [count])\n\n    const [rect, setRect] = useState({})\n    const divRef = useRef();\n\n    useLayoutEffect(() => {\n        setRect(divRef.current.getBoundingClientRect())\n    }, [data])\n\n    const rectangle = useMeasure()\n    return(\n        <div>\n            <div style={{display: 'flex'}}>\n                <div ref={divRef}>{!data ? 'loading....' : data}</div>\n            </div>\n            <div>\n                {JSON.stringify(rect, null, 2)}\n            </div>\n            <div>count: {count}</div>\n            <button onClick={() => setCount(c => c + 1)}>Increment</button>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}