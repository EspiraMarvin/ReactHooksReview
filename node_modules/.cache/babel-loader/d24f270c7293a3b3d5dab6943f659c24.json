{"ast":null,"code":"var _jsxFileName = \"/home/marvin/Documents/Projects/React/hooks/src/Hello.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\nimport { useFetch } from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Hello = () => {\n  _s();\n\n  const [count, setCount] = useState(() => JSON.parse(localStorage.getItem('count')));\n  const {\n    data,\n    loading\n  } = useFetch(`http://numbersapi.com/${count}/trivia`);\n  useEffect(() => {\n    localStorage.setItem('count', JSON.stringify(count));\n  }, [count]);\n  const divRef = useRef();\n  useLayoutEffect(() => {\n    console.log(divRef.current);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: divRef,\n        children: !data ? 'loading....' : data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(c => c + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Hello, \"DJrcuqkiPsoa1RIfLBFgMxLPVLY=\", false, function () {\n  return [useFetch];\n});\n\n_c = Hello;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hello\");","map":{"version":3,"sources":["/home/marvin/Documents/Projects/React/hooks/src/Hello.js"],"names":["React","useState","useEffect","useRef","useLayoutEffect","useFetch","Hello","count","setCount","JSON","parse","localStorage","getItem","data","loading","setItem","stringify","divRef","console","log","current","display","c"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,eAA7C,QAAoE,OAApE;AACA,SAAQC,QAAR,QAAuB,YAAvB;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,MAC/BQ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAD8B,CAAlC;AAIA,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBT,QAAQ,CAAE,yBAAwBE,KAAM,SAAhC,CAAhC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,SAAL,CAAeT,KAAf,CAA9B;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,QAAMU,MAAM,GAAGd,MAAM,EAArB;AACAC,EAAAA,eAAe,CAAC,MAAM;AAClBc,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB;AACH,GAFc,EAEZ,CAACP,IAAD,CAFY,CAAf;AAGA,sBACI;AAAA,4BACI;AAAK,MAAA,KAAK,EAAE;AAACQ,QAAAA,OAAO,EAAE;AAAV,OAAZ;AAAA,6BACI;AAAK,QAAA,GAAG,EAAEJ,MAAV;AAAA,kBAAmB,CAACJ,IAAD,GAAQ,aAAR,GAAwBA;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,4BAAaN,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACc,CAAC,IAAIA,CAAC,GAAG,CAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA1BM;;GAAMhB,K;UAMeD,Q;;;KANfC,K","sourcesContent":["import React, { useState, useEffect, useRef, useLayoutEffect } from 'react'\nimport {useFetch} from \"./useFetch\";\n\nexport const Hello = () => {\n\n    const [count, setCount] = useState(() =>\n        JSON.parse(localStorage.getItem('count'))\n    )\n\n    const {data, loading} = useFetch(`http://numbersapi.com/${count}/trivia`)\n\n    useEffect(() => {\n        localStorage.setItem('count', JSON.stringify(count))\n    }, [count])\n\n    const divRef = useRef();\n    useLayoutEffect(() => {\n        console.log(divRef.current)\n    }, [data])\n    return(\n        <div>\n            <div style={{display: 'flex'}}>\n                <div ref={divRef}>{!data ? 'loading....' : data}</div>\n            </div>\n            <div>count: {count}</div>\n            <button onClick={() => setCount(c => c + 1)}>Increment</button>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}