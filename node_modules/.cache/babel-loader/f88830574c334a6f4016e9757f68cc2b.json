{"ast":null,"code":"var _jsxFileName = \"/home/marvin/Documents/Projects/React/hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useLayoutEffect } from \"react\";\nimport { useForm } from \"./useForm\";\nimport { Hello } from \"./Hello\"; // the below function is called when we have a heavy computational task, and we want to only called the func only once when component renders for the 1st time // It runs on the intial value\n// function expInState () {\n//   return 10\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [values, handleChange] = useForm({\n    email: '',\n    password: '',\n    firstname: ''\n  });\n  const [showHello, setShowHello] = useState(true);\n  const inputRef = useRef(); // using ref as a function\n\n  const hello = useRef(() => console.log('hello'));\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    console.log('form submittingg......', values);\n  };\n\n  useLayoutEffect(() => {\n    console.log(inputRef.current.getBoundingClientRect());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowHello(!showHello),\n        children: \"Toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), showHello && /*#__PURE__*/_jsxDEV(Hello, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstname\",\n          value: values.firstname,\n          onChange: handleChange,\n          placeholder: \"First Name\",\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          value: values.email,\n          onChange: handleChange,\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: values.password,\n          onChange: handleChange,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            inputRef.current.focus();\n            hello.current();\n          },\n          children: \"Focus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"8VKaTbZWc6K/lnCc8fLWtpgruEE=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/marvin/Documents/Projects/React/hooks/src/App.js"],"names":["React","useState","useRef","useLayoutEffect","useForm","Hello","App","values","handleChange","email","password","firstname","showHello","setShowHello","inputRef","hello","console","log","handleFormSubmit","e","preventDefault","current","getBoundingClientRect","focus"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,eAAlC,QAAyD,OAAzD;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAASC,KAAT,QAAsB,SAAtB,C,CAEA;AACA;AACA;AACA;;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBJ,OAAO,CAAC;AACnCK,IAAAA,KAAK,EAAE,EAD4B;AAEnCC,IAAAA,QAAQ,EAAE,EAFyB;AAGnCC,IAAAA,SAAS,EAAE;AAHwB,GAAD,CAAtC;AAMA,QAAO,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA3C;AACA,QAAMa,QAAQ,GAAGZ,MAAM,EAAvB,CARc,CASd;;AACA,QAAMa,KAAK,GAAGb,MAAM,CAAC,MAAMc,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAP,CAApB;;AAEA,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCV,MAAtC;AACH,GAHD;;AAKAJ,EAAAA,eAAe,CAAC,MAAM;AAClBa,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACO,OAAT,CAAiBC,qBAAjB,EAAZ;AACH,GAFc,EAEZ,EAFY,CAAf;AAIA,sBACA;AAAA,2BACI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAMT,YAAY,CAAC,CAACD,SAAF,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEMA,SAAS,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFnB,eAGI;AAAM,QAAA,QAAQ,EAAEM,gBAAhB;AAAA,gCAEJ;AACI,UAAA,IAAI,EAAC,MADT;AACgB,UAAA,IAAI,EAAC,WADrB;AAEI,UAAA,KAAK,EAAEX,MAAM,CAACI,SAFlB;AAGI,UAAA,QAAQ,EAAEH,YAHd;AAII,UAAA,WAAW,EAAC,YAJhB;AAKI,UAAA,GAAG,EAAEM;AALT;AAAA;AAAA;AAAA;AAAA,gBAFI,eASJ;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,OAAxB;AACO,UAAA,KAAK,EAAEP,MAAM,CAACE,KADrB;AAEO,UAAA,QAAQ,EAAED,YAFjB;AAGO,UAAA,WAAW,EAAC;AAHnB;AAAA;AAAA;AAAA;AAAA,gBATI,eAcJ;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,UAA5B;AACO,UAAA,KAAK,EAAED,MAAM,CAACG,QADrB;AAEO,UAAA,QAAQ,EAAEF,YAFjB;AAGO,UAAA,WAAW,EAAC;AAHnB;AAAA;AAAA;AAAA;AAAA,gBAdI,eAmBJ;AAAQ,UAAA,OAAO,EAAE,MAAM;AACnBM,YAAAA,QAAQ,CAACO,OAAT,CAAiBE,KAAjB;AACAR,YAAAA,KAAK,CAACM,OAAN;AACH,WAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBI;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAiCH,CAtDD;;GAAMf,G;UAC6BF,O;;;KAD7BE,G;AAwDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef, useLayoutEffect } from \"react\";\nimport {useForm} from \"./useForm\";\nimport { Hello } from \"./Hello\"\n\n// the below function is called when we have a heavy computational task, and we want to only called the func only once when component renders for the 1st time // It runs on the intial value\n// function expInState () {\n//   return 10\n// }\n\nconst App = () => {\n    const [values, handleChange] = useForm({\n        email: '',\n        password: '',\n        firstname: ''\n        });\n\n    const  [showHello, setShowHello] = useState(true)\n    const inputRef = useRef()\n    // using ref as a function\n    const hello = useRef(() => console.log('hello'))\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault()\n        console.log('form submittingg......', values)\n    }\n\n    useLayoutEffect(() => {\n        console.log(inputRef.current.getBoundingClientRect())\n    }, [])\n\n    return (\n    <div>\n        <>\n            <button onClick={() => setShowHello(!showHello)}>Toggle</button>\n            { showHello && <Hello />}\n            <form onSubmit={handleFormSubmit}>\n\n        <input\n            type=\"text\" name=\"firstname\"\n            value={values.firstname}\n            onChange={handleChange}\n            placeholder=\"First Name\"\n            ref={inputRef}\n        />\n        <input type=\"text\" name=\"email\"\n               value={values.email}\n               onChange={handleChange}\n               placeholder=\"Email\"\n        />\n        <input type=\"password\" name=\"password\"\n               value={values.password}\n               onChange={handleChange}\n               placeholder=\"Password\"\n        />\n        <button onClick={() => {\n            inputRef.current.focus()\n            hello.current()\n        }}\n        >Focus</button>\n            </form>\n        </>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}