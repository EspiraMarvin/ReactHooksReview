{"ast":null,"code":"var _jsxFileName = \"/home/marvin/Documents/Projects/React/hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"./useForm\";\nimport { Hello } from \"./Hello\"; // the below function is called when we have a heavy computational task, and we want to only called the func only once\n// when component renders for the 1st time // It runs on the intial value\n// function expInState () {\n//   return 10\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const [{count, count2 }, setCount] = useState({ count: 10, count2: 20})\n  const [values, handleChange] = useForm({\n    email: '',\n    password: '',\n    firstname: ''\n  }); // const [values2, handleChange2] = useForm({firstname: '', lastname: ''})\n\n  const [showHello, setShowHello] = useState(true); // every time this component re-renders it runs the useEffect function\n\n  useEffect(() => {\n    // console.log(\"render\")\n    const onMouseMove = e => {\n      console.log(e);\n    };\n\n    window.addEventListener('mousemove'); // clean up function\n\n    return () => {\n      console.log('unmount');\n    };\n  }, [values.email]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstname\",\n        value: values.firstname,\n        onChange: handleChange,\n        placeholder: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: values.email,\n        onChange: handleChange,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: values.password,\n        onChange: handleChange,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/z0656PV8l7raw1smtkilP5Uwv4=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/marvin/Documents/Projects/React/hooks/src/App.js"],"names":["React","useEffect","useState","useForm","Hello","App","values","handleChange","email","password","firstname","showHello","setShowHello","onMouseMove","e","console","log","window","addEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAASC,KAAT,QAAsB,SAAtB,C,CAEA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBJ,OAAO,CAAC;AAACK,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE,EAAtB;AAA0BC,IAAAA,SAAS,EAAE;AAArC,GAAD,CAAtC,CAFgB,CAGhB;;AAEE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C,CALc,CAMd;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMY,WAAW,GAAGC,CAAC,IAAI;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,KAFD;;AAGAG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EALY,CAMZ;;AACA,WAAO,MAAM;AACTH,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAFD;AAGH,GAVQ,EAUN,CAACV,MAAM,CAACE,KAAR,CAVM,CAAT;AAYF,sBACE;AAAA,2BACI;AAAA,8BAGA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,WAAxB;AACO,QAAA,KAAK,EAAEF,MAAM,CAACI,SADrB;AAEO,QAAA,QAAQ,EAAEH,YAFjB;AAGO,QAAA,WAAW,EAAC;AAHnB;AAAA;AAAA;AAAA;AAAA,cAHA,eAQA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AACO,QAAA,KAAK,EAAED,MAAM,CAACE,KADrB;AAEO,QAAA,QAAQ,EAAED,YAFjB;AAGO,QAAA,WAAW,EAAC;AAHnB;AAAA;AAAA;AAAA;AAAA,cARA,eAaA;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,UAA5B;AACO,QAAA,KAAK,EAAED,MAAM,CAACG,QADrB;AAEO,QAAA,QAAQ,EAAEF,YAFjB;AAGO,QAAA,WAAW,EAAC;AAHnB;AAAA;AAAA;AAAA;AAAA,cAbA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA1CD;;GAAMF,G;UAE2BF,O;;;KAF3BE,G;AA4CN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {useForm} from \"./useForm\";\nimport { Hello } from \"./Hello\"\n\n// the below function is called when we have a heavy computational task, and we want to only called the func only once\n// when component renders for the 1st time // It runs on the intial value\n// function expInState () {\n//   return 10\n// }\n\nconst App = () => {\n  // const [{count, count2 }, setCount] = useState({ count: 10, count2: 20})\n  const [values, handleChange] = useForm({email: '', password: '', firstname: ''});\n  // const [values2, handleChange2] = useForm({firstname: '', lastname: ''})\n\n    const [showHello, setShowHello] = useState(true)\n    // every time this component re-renders it runs the useEffect function\n    useEffect(() => {\n        // console.log(\"render\")\n        const onMouseMove = e => {\n         console.log(e)\n        }\n        window.addEventListener('mousemove')\n        // clean up function\n        return () => {\n            console.log('unmount')\n        }\n    }, [values.email])\n\n  return (\n    <div>\n        <>\n            {/*<button onClick={() => setShowHello(!showHello)}>Toggle</button>*/}\n            {/*{ showHello && <Hello />}*/}\n        <input type=\"text\" name=\"firstname\"\n               value={values.firstname}\n               onChange={handleChange}\n               placeholder=\"First Name\"\n        />\n        <input type=\"text\" name=\"email\"\n               value={values.email}\n               onChange={handleChange}\n               placeholder=\"Email\"\n        />\n        <input type=\"password\" name=\"password\"\n               value={values.password}\n               onChange={handleChange}\n               placeholder=\"Password\"\n        />\n        </>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}