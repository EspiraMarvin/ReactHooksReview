{"ast":null,"code":"var _jsxFileName = \"/home/marvin/Documents/Projects/React/hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // the below function is called when we have a heavy computational task, and we want to only called the func only once\n// when component renders for the 1st time // It runs on the intial value\n// function expInState () {\n//   return 10\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [{\n    count,\n    count2\n  }, setCount] = useState({\n    count: 10,\n    count2: 20\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(currentState => ({ ...currentState,\n        count: currentState.count + 1\n      })),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"count 1: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"count 2: \", count2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"4AZt/9h4AyNP2PKwJn2Hc3z0Dus=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/marvin/Documents/Projects/React/hooks/src/App.js"],"names":["React","useState","App","count","count2","setCount","currentState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,EAAmBC,QAAnB,IAA+BJ,QAAQ,CAAC;AAAEE,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,MAAM,EAAE;AAArB,GAAD,CAA7C;AAEA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MACbC,QAAQ,CAACC,YAAY,KAAK,EAAC,GAAGA,YAAJ;AAAkBH,QAAAA,KAAK,EAAEG,YAAY,CAACH,KAAb,GAAqB;AAA9C,OAAL,CAAb,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,8BAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,8BAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAfD;;GAAMF,G;;KAAAA,G;AAiBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\n// the below function is called when we have a heavy computational task, and we want to only called the func only once\n// when component renders for the 1st time // It runs on the intial value\n// function expInState () {\n//   return 10\n// }\n\nconst App = () => {\n  const [{count, count2 }, setCount] = useState({ count: 10, count2: 20})\n\n  return (\n    <div>\n      <button onClick={() =>\n          setCount(currentState => ({...currentState, count: currentState.count + 1}))}>\n          +\n      </button>\n      {/*<button onClick={() => setCount(count - 1)}> - </button>*/}\n      <div>count 1: {count}</div>\n      <div>count 2: {count2}</div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}